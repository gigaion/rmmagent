name: Build Linux

on:
  workflow_dispatch:
  
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20.13'
      
    - name: Build linux amd64 binary
      run: |
        env CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o rmmagent-amd64-linux
    - name: Build linux 386 binary
      run: |
        env CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -ldflags "-s -w" -o rmmagent-386-linux
    - name: Build linux arm64 binary
      run: |
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags "-s -w" -o rmmagent-arm64-linux
    - name: Build linux arm binary
      run: |
        env CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -ldflags "-s -w" -o rmmagent-arm-linux

    - name: Upload amd64 Build Artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: rmmagent-amd64-linux
        path: rmmagent-amd64-linux

    - name: Upload 386 Build Artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: rmmagent-386-linux
        path: rmmagent-386-linux

    - name: Upload arm64 Build Artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: rmmagent-arm64-linux
        path: rmmagent-arm64-linux

    - name: Upload arm Build Artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: rmmagent-arm-linux
        path: rmmagent-arm-linux

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          rmmagent-amd64-linux
          rmmagent-386-linux
          rmmagent-arm64-linux
          rmmagent-arm-linux
        tag_name: testing
        name: "Linux Release for Testing"
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
